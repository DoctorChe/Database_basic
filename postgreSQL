-- создаем таблицу likes, которая использует составной тип liketype
CREATE TABLE likes (
id INT,
likes liketype 
);

-- вставляем данные в таблицу likes (для составного типа используется ROW)
INSERT INTO likes VALUES
(1, ROW(1,2,1)),
(2, ROW(2,1,4)),
(3, ROW(1,3,3)),
(4, ROW(3,2,1)),
(5, ROW(2,3,4)),
(6, ROW(4,2,1)),
(7, ROW(4,3,4));

-- создаем таблицу users
CREATE TABLE users (
id INT,
name VARCHAR(25)
);

-- вставляем данные в таблицу users
INSERT INTO users VALUES
(1, 'Михаил'),
(2, 'Фёдор'),
(3, 'Андрей'),
(4, 'Дмитрий');

-- посчитать количество лайков поставленных пользователем с id=1
SELECT COUNT(*) FROM likes WHERE (likes).liker_id = 1;

-- посчитать количество лайков поставленных пользователю с id=1
SELECT COUNT(*) FROM likes WHERE (likes).liked_id = 1;

-- посчитать количество взаимных лайков
SELECT COUNT(*) FROM likes
WHERE (likes).liked_id = 1 AND (likes).liker_id IN (
    SELECT (likes).liked_id
    FROM likes
    WHERE (likes).liker_id = 1

--запрос, который выведет информацию:id пользователя;имя;лайков получено;лайков поставлено;взаимные лайки.
SELECT T1.id, T1.name, T2.liker, T3.liked, T4.mutual
FROM
  (SELECT id, name FROM users WHERE id = 1) T1,
  (SELECT COUNT(*) AS liker FROM likes WHERE (likes).liker_id = 1) T2,
  (SELECT COUNT(*) AS liked FROM likes WHERE (likes).liked_id = 1) T3,
  (SELECT COUNT(*) AS mutual FROM likes
	WHERE (likes).liked_id = 1 AND (likes).liker_id IN (
    SELECT (likes).liked_id
    FROM likes
    WHERE (likes).liker_id = 1)) T4

--запрос, который выводит список всех пользователей, которые поставили лайк пользователям A и B (id задайте произвольно), но при этом не поставили лайк пользователю C
SELECT t1.id, t1.name 
FROM
	users t1,
	(
		SELECT 
			(likes).liker_id, 
			COUNT(
				CASE
					WHEN (likes).liked_id = 1 THEN 1
					ELSE NULL
				END
			) AS liked_1, 
			COUNT(
				CASE
					WHEN (likes).liked_id = 2 THEN 1
					ELSE NULL
				END
			) AS liked_2, 
			COUNT(
				CASE
					WHEN (likes).liked_id = 3 THEN 1
					ELSE NULL
				END
			) AS liked_3
		FROM likes
		GROUP BY (likes).liker_id
	) AS t2
WHERE t1.id=t2.liker_id AND t2.liked_1=0 AND t2.liked_2=1 AND t2.liked_3=1;
